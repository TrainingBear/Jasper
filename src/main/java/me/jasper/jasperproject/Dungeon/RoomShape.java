package me.jasper.jasperproject.Dungeon;
public enum RoomShape {
    L_SHAPE (new int[][][] {
            // L
            {{0, 0}, {1, 0}, {1, 1}},//0

            {{0, 0}, {0, 1}, {1, 0}},//90
            {{0, 0}, {0, 1}, {1, 1}},//180
            {{0, 0}, {1, 0}, {1, -1}},//270
            {{0, 0}, {-1, 0}, {0, 1}},//0
            {{0, 0}, {0, -1}, {1, -1}},//90
            {{0, 0}, {0, -1}, {1, 0}},//180
            {{0, 0}, {-1, 0}, {0, -1}},//270
            {{0, 0}, {0, -1}, {-1, -1}},//0
            // 90 degree of L
            {{0, 0}, {-1, 0}, {-1, 1}},//90
            // 180 degree of L
            {{0, 0}, {-1, 0}, {-1, -1}},//180
            // 270 degree of L
            {{0, 0}, {0, 1}, {-1, 1}},//270
    }, RoomType.L_SHAPE,
            new int[][][]{
                    // L
                    {{0, 0}, {1, 0}, {0, 1}},//0
                    {{0, 0}, {0, 1}, {1, 0}},//90
                    {{0, 0}, {0, 1}, {1, 0}},//180
                    {{0, 0}, {1, 0}, {0, -1}},//270
                    {{0, 0}, {-1, 0}, {0, 1}},//0
                    {{0, 0}, {1, 0}, {0, -1}},//90
                    {{0, 0}, {0, -1}, {1, 0}},//180
                    {{0, 0}, {-1, 0}, {0, -1}},//270
                    {{0, 0}, {0, -1}, {-1, 0}},//0
                    // 90 degree of L
                    {{0, 0}, {-1, 0}, {0, 1}},//90
                    // 180 degree of L
                    {{0, 0}, {-1, 0}, {0, -1}},//180
                    // 270 degree of L
                    {{0, 0}, {0, 1}, {-1, 0}},//270
            }
            ),

    BOX(new int[][][]{
            // box
            {{0, 0}, {0, 1}, {1, 1}, {1, 0}},
            {{0, 0}, {0, -1}, {1, -1}, {1, 0}},
            {{0, 0}, {-1, 0}, {-1, -1}, {0, -1}},
            {{0, 0}, {-1, 0}, {0, 1}, {-1, 1}},
    }, RoomType.BOX,
            new int[][][]{
                    // box
                    {{0, 0}, {0, 1}, {1, 0}, },
                    {{0, 0}, {0, -1}, {1, 0},},
                    {{0, 0}, {-1, 0}, {0, -1}},
                    {{0, 0}, {0, 1}, {-1, 0}, },
            }
            ),

    FOUR_X_ONE(new int[][][]{
            // 4x1
            {{0, 0}, {0, 1}, {0, 2}, {0, 3}},
            {{0, 0}, {1, 0}, {2, 0}, {3, 0}},
            {{0, 0}, {0, -1}, {0, 1}, {0, 2}},
            {{0, 0}, {-1, 0}, {1, 0}, {2, 0}},
            {{0, 0}, {0, -1}, {0, -2}, {0, 1}},
            {{0, 0}, {-1, 0}, {-2, 0}, {1, 0}},
            {{0, 0}, {0, -1}, {0, -2}, {0, -3}},
            {{0, 0}, {-1, 0}, {-2, 0}, {-3, 0}},
            // 1x4
    }, RoomType.FOUR_X_ONE,
            new int[][][]{
                    // 4x1
                    {{0, 0}, {0, 1}, {0, 1}, {0, 1}},
                    {{0, 0}, {1, 0}, {1, 0}, {1, 0}},
                    {{0, 0}, {0, -1}, {0, 1}, {0, 1}},
                    {{0, 0}, {-1, 0}, {1, 0}, {1, 0}},
                    {{0, 0}, {0, -1}, {0, -1}, {0, 1}},
                    {{0, 0}, {-1, 0}, {-1, 0}, {1, 0}},
                    {{0, 0}, {0, -1}, {0, -1}, {0, -1}},
                    {{0, 0}, {-1, 0}, {-1, 0}, {-1, 0}},
                    // 1x4
            }
            ),

    THREE_X_ONE(new int[][][]{
            // 3x1
            {{0, 0}, {0, 1}, {0, 2}},
            {{0, 0}, {1, 0}, {2, 0}},
            {{0, 0}, {0, -1}, {0, 1}},
            {{0, 0}, {-1, 0}, {1, 0}},
            {{0, 0}, {0, -1}, {0, -2}},
            {{0, 0}, {-1, 0}, {-2, 0}},
            // 1x3

    }, RoomType.THREE_X_ONE,
            new int[][][]{
                    // 3x1
                    {{0, 0}, {0, 1}, {0, 1}},
                    {{0, 0}, {1, 0}, {1, 0}},
                    {{0, 0}, {0, -1}, {0, 1}},
                    {{0, 0}, {-1, 0}, {1, 0}},
                    {{0, 0}, {0, -1}, {0, -1}},
                    {{0, 0}, {-1, 0}, {-1, 0}},
                    // 1x3

            }),

    TWO_X_ONE(new int[][][]{
            // 2x1

            {{0, 0}, {0, 1}},
            {{0, 0}, {1, 0}},
            // 1x2
            {{0, 0}, {0, -1}},
            {{0, 0}, {-1, 0}},
    }, RoomType.TWO_X_ONE,
            new int[][][]{
                    // 2x1

                    {{0, 0}, {0, 1}},
                    {{0, 0}, {1, 0}},
                    // 1x2
                    {{0, 0}, {0, -1}},
                    {{0, 0}, {-1, 0}},
            }),
    ONE(new int[][][]{
            // 1x1
            {{0, 0}}
    }, RoomType.SINGLE,
            new int[][][]{
                    // 1x1
                    {{0, 0}}
            });


    final int[][][] shape;
    final int[][][] copyOfShape;
    final RoomType type;

    RoomShape(int[][][] shape, RoomType type, int[][][] copyOfShape) {
        this.shape = shape;
        this.type = type;
        this.copyOfShape = copyOfShape;
    }
}
